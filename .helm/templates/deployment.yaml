---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Chart.Name }}"
  labels:
    app: "{{ .Chart.Name }}"
spec:
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: "{{ .Chart.Name }}"
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: "{{ .Chart.Name }}"
    spec:
{{ if (eq .Values.werf.env "prod") }}
      nodeName: node-cloud-1
{{ end }}
      imagePullSecrets:
      - name: pull
      containers:
      - name: "{{ .Chart.Name }}"
        env:
        - name: APP
          value: {{ .Values.werf.name }}
        - name: BOT_AUTH
          value: {{ .Values.bot_auth }}
        - name: CHAT_URL
          value: {{ .Values.chat_url }}
        ports: 
          - name: app
            containerPort: 8080
            protocol: TCP
        image: "{{ .Values.werf.image.frontend }}"
      - name: exporter
        image: nginx/nginx-prometheus-exporter:0.10.0
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - name: metrics
          containerPort: 9100
          protocol: TCP
        # livenessProbe:
        #   httpGet:
        #     path: /healthz
        #     port: 9100
        #     scheme: HTTP
        # readinessProbe:
        #   httpGet:
        #     path: /readyz
        #     port: 9100
        #     scheme: HTTP
        args:
          - -nginx.scrape-uri=http://127.0.0.1:8080/stub_status 
          - -web.listen-address=:9100
{{ if (eq .Values.werf.env "prod") }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Chart.Name }}-ru"
  labels:
    app: "{{ .Chart.Name }}-ru"
spec:
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: "{{ .Chart.Name }}-ru"
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: "{{ .Chart.Name }}-ru"
    spec:
{{ if (eq .Values.werf.env "prod") }}
      nodeName: node-cloud-1
{{ end }}
      imagePullSecrets:
      - name: pull
      containers:
      - name: "{{ .Chart.Name }}"
        env:
        - name: APP
          value: {{ .Values.werf.name }}-ru
        - name: BOT_AUTH
          value: {{ .Values.bot_auth_ru }}
        - name: CHAT_URL
          value: {{ .Values.chat_url_ru }}
        ports: 
          - name: app
            containerPort: 8080
            protocol: TCP
        image: "{{ .Values.werf.image.frontend }}"
      - name: exporter
        image: nginx/nginx-prometheus-exporter:0.10.0
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - name: metrics
          containerPort: 9100
          protocol: TCP
        # livenessProbe:
        #   httpGet:
        #     path: /healthz
        #     port: 9100
        #     scheme: HTTP
        # readinessProbe:
        #   httpGet:
        #     path: /readyz
        #     port: 9100
        #     scheme: HTTP
        args:
          - -nginx.scrape-uri=http://127.0.0.1:8080/stub_status 
          - -web.listen-address=:9100
{{ end }}